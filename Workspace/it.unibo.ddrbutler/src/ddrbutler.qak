/*
 * Modello del sistema derivante dall'analisi dei requisiti
 */

System ddrbutler

/*Messaggi */
Request req_content : content					//maitre->fridge: chiede contenuto
Request req_food : food( FOOD_CODE )			//rbr->fridge: chiede disponibilità FOOD_CODE

Dispatch res_content : content( CONTENT )		//fridge->maitre: risposta sul contenuto
Dispatch res_food : food( ANSWER )				//fridge->rbr: risposta sulla disponibilità

Dispatch prepare : prepare						//maitre->rbr: comando prepare
Dispatch clear : clear							//maitre->rbr: comando clear
Dispatch add_food : add_food( FOOD_CODE )		//maitre->rbr: comando add_food su un FOOD_CODE

Dispatch alert : alert( FOOD_CODE )				//rbr->maitre: allarme sulla mancanza di FOOD_CODE
Dispatch notify : notify						//rbr->maitre: notifica completamento task

Dispatch stop : stop							//maitre->rbr: interruzione task
Dispatch reactivate : reactivate				//maitre->rbr: riattivazione task	

/*Contexts */
Context ctxRobotButlerReq ip [host="localhost" port=3030]

//Requisiti: ACCEPT,PREPARE,CLEAR,ADD_FOOD,RETURN,STORE_DESCR,ALERT,NOTIFY,AVOID,ANSWER
QActor rbr_req context ctxRobotButlerReq{
	State s0 initial{
		println("RBR STARTED...")
	}
}

//Requisiti: KNOW_STATE,STOP,REACTIVATE,PREPARE,CLEAR,ADD_FOOD,EXPOSE
QActor maitrereq context ctxRobotButlerReq{
	State s0 initial{
		println("MAITRE STARTED...")
	}
}

//Requisiti: EXPOSE,ANSWER
QActor fridgereq context ctxRobotButlerReq{
	State s0 initial{
		println("FRIDGE STARTED...")
	}
}

QActor pantryreq context ctxRobotButlerReq{
	State s0 initial{
		println("PANTRY STARTED...")
	}
}

QActor dishwasherreq context ctxRobotButlerReq{
	State s0 initial{
		println("DISHWASHER STARTED...")
	}
}
