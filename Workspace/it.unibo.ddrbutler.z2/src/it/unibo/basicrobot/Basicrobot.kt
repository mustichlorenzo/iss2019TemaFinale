/* Generated by AN DISI Unibo */ 
package it.unibo.basicrobot

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Basicrobot ( name: String, scope: CoroutineScope ) : ActorBasicFsm( name, scope){
 	
	override fun getInitialState() : String{
		return "s0"
	}
		
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("[BASICROBOT]: Started...")
					}
					 transition( edgeName="goto",targetState="waitCmd", cond=doswitch() )
				}	 
				state("waitCmd") { //this:State
					action { //it:State
						println("[BASICROBOT]: Sono in waitCmd")
					}
					 transition(edgeName="t027",targetState="handleCommand",cond=whenDispatch("robotCmd"))
				}	 
				state("handleCommand") { //this:State
					action { //it:State
						println("[BASICROBOT]: Sono in handleCommand")
						if( checkMsgContent( Term.createTerm("robotCmd(X)"), Term.createTerm("robotCmd(X)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								forward("movementCompleted", "movementCompleted" ,"execroute" ) 
						}
					}
					 transition( edgeName="goto",targetState="waitCmd", cond=doswitch() )
				}	 
			}
		}
}
