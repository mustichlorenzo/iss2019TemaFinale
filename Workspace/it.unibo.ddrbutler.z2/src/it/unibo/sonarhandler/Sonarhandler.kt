/* Generated by AN DISI Unibo */ 
package it.unibo.sonarhandler

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Sonarhandler ( name: String, scope: CoroutineScope ) : ActorBasicFsm( name, scope){
 	
	override fun getInitialState() : String{
		return "s0"
	}
		
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("[SONAR HANDLER]: Started...")
					}
					 transition( edgeName="goto",targetState="waitData", cond=doswitch() )
				}	 
				state("waitData") { //this:State
					action { //it:State
						println("[SONAR HANDLER]: Sono in waitData")
					}
					 transition(edgeName="t00",targetState="handleData",cond=whenEvent("sonarRobot"))
				}	 
				state("handleData") { //this:State
					action { //it:State
						println("[SONAR HANDLER]: Sono in handleData")
					}
					 transition( edgeName="goto",targetState="waitData", cond=doswitch() )
				}	 
			}
		}
}
