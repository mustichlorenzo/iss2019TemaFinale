/* Generated by AN DISI Unibo */ 
package it.unibo.pantry

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Pantry ( name: String, scope: CoroutineScope ) : ActorBasicFsm( name, scope){
 	
	override fun getInitialState() : String{
		return "s0"
	}
		
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		
				var qnt = -1
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("[PANTRY]: Started...")
						itunibo.pantry.pantrySupport.create( 20  )
						forward("setLocation","setLocation(pantry,0,3)","planner")
					}
					 transition( edgeName="goto",targetState="waitCmd", cond=doswitch() )
				}	 
				state("waitCmd") { //this:State
					action { //it:State
						forward("modelUpdatePantry", "modelUpdatePantry(pantry,idle,null)" ,"resourcemodelpantry" ) 
					}
					 transition(edgeName="t098",targetState="putDish",cond=whenDispatch("putDishPantry"))
					transition(edgeName="t099",targetState="takeDish",cond=whenDispatch("takeDishPantry"))
				}	 
				state("putDish") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						if( checkMsgContent( Term.createTerm("putDishPantry(QNT)"), Term.createTerm("putDishPantry(QNT)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								forward("modelUpdatePantry", "modelUpdatePantry(pantry,put,${payloadArg(0)})" ,"resourcemodelpantry" ) 
								qnt = Integer.parseInt(payloadArg(0))
								itunibo.pantry.pantrySupport.putDishes(myself ,qnt )
						}
					}
					 transition( edgeName="goto",targetState="waitCmd", cond=doswitch() )
				}	 
				state("takeDish") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						if( checkMsgContent( Term.createTerm("takeDishPantry(QNT)"), Term.createTerm("takeDishPantry(QNT)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								forward("modelUpdatePantry", "modelUpdatePantry(pantry,take,${payloadArg(0)})" ,"resourcemodelpantry" ) 
								qnt = Integer.parseInt(payloadArg(0))
								itunibo.pantry.pantrySupport.takeDishes(myself ,qnt )
						}
					}
					 transition( edgeName="goto",targetState="waitCmd", cond=doswitch() )
				}	 
			}
		}
}
